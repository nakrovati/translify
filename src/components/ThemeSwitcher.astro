<details class="dropdown dropdown-end" id="theme-switcher">
  <summary class="btn m-1">Theme</summary>
  <ul
    class="menu dropdown-content bg-base-100 rounded-box z-1 w-52 p-2 shadow-sm"
  >
    <li><button data-select-theme="light">Light</button></li>
    <li><button data-select-theme="dark">Dark</button></li>
    <li><button data-select-theme="system">System</button></li>
  </ul>
</details>

<script>
  const StorageKey = "translify:theme";

  globalThis.addEventListener("DOMContentLoaded", () => {
    initTheme();
    setupThemeButtons();
  });

  function applySystemTheme() {
    const isDarkMode = globalThis.matchMedia(
      "(prefers-color-scheme: dark)",
    ).matches;
    document.documentElement.dataset.theme = isDarkMode ? "dark" : "light";
  }

  function handleSystemThemeChange() {
    if (localStorage.getItem(StorageKey) === "system") {
      applySystemTheme();
    }
  }

  function initTheme() {
    const savedTheme = localStorage.getItem(StorageKey) || "system";
    setTheme(savedTheme);
    setupWindowColorSchemeListener();
  }

  function setTheme(theme: string) {
    if (theme === "system") {
      applySystemTheme();
    } else {
      document.documentElement.dataset.theme = theme;
    }
    localStorage.setItem(StorageKey, theme);
  }

  function setupThemeButtons() {
    for (const button of document.querySelectorAll<HTMLButtonElement>(
      "[data-select-theme]",
    )) {
      button.addEventListener("click", () => {
        const theme = button.dataset.selectTheme!;
        setTheme(theme);
      });
    }
  }

  function setupWindowColorSchemeListener() {
    const mediaQuery = globalThis.matchMedia("(prefers-color-scheme: dark)");

    mediaQuery.addEventListener("change", handleSystemThemeChange);
  }
</script>
